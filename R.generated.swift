//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let reuseIdentifier = reuseIdentifier()

  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 6 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `ic-avengers`.
    var icAvengers: RswiftResources.ImageResource { .init(name: "ic-avengers", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic-guardians-of-the-galaxy`.
    var icGuardiansOfTheGalaxy: RswiftResources.ImageResource { .init(name: "ic-guardians-of-the-galaxy", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic-knives-out`.
    var icKnivesOut: RswiftResources.ImageResource { .init(name: "ic-knives-out", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic-movie-list-app`.
    var icMovieListApp: RswiftResources.ImageResource { .init(name: "ic-movie-list-app", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic-spiderman`.
    var icSpiderman: RswiftResources.ImageResource { .init(name: "ic-spiderman", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic-tenet`.
    var icTenet: RswiftResources.ImageResource { .init(name: "ic-tenet", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
    }
  }

  /// This `_R.nib` struct is generated, and contains static references to 3 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `DetailViewController`.
    var detailViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "DetailViewController", bundle: bundle) }

    /// Nib `ItemMovieCell`.
    var itemMovieCell: RswiftResources.NibReferenceReuseIdentifier<ItemMovieCell, ItemMovieCell> { .init(name: "ItemMovieCell", bundle: bundle, identifier: "ItemMovieCell") }

    /// Nib `MainViewController`.
    var mainViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "MainViewController", bundle: bundle) }

    func validate() throws {
      if UIKit.UIImage(named: "ic-avengers", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ic-avengers' is used in nib 'DetailViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ic-avengers", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ic-avengers' is used in nib 'ItemMovieCell', but couldn't be loaded.") }
    }
  }

  /// This `_R.reuseIdentifier` struct is generated, and contains static references to 1 reuse identifiers.
  struct reuseIdentifier {

    /// Reuse identifier `ItemMovieCell`.
    let itemMovieCell: RswiftResources.ReuseIdentifier<ItemMovieCell> = .init(identifier: "ItemMovieCell")
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
      try self.main.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = ViewController

      let bundle: Foundation.Bundle

      let name = "Main"
      func validate() throws {

      }
    }
  }
}